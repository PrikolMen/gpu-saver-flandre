addonName = "Flandre Stanby Screen"
:abs, :sin, :min, :ceil = math
ScrW, ScrH = ScrW, ScrH
:Add = hook

-- Client-side ConVars
cl_flandre_color = CreateClientConVar( "cl_flandre_color", "0.15 0.15 0.15", true, false, "Background color of standby screen." )
cl_flandre_size = CreateClientConVar( "cl_flandre_size", "25", true, false, "Size of standby screen icon.", 1, 100 )

-- Size and position
width, height = ScrW!, ScrH!
vmin = min( width, height ) / 100

Add "OnScreenSizeChanged", addonName, ->
    width, height = ScrW!, ScrW!
    vmin = min( width, height ) / 100

-- Background color
backgroundColor = Vector( cl_flandre_color\GetString! )\ToColor!

cvars.AddChangeCallback( cl_flandre_color\GetName!, ( _, __, value ) ->
    backgroundColor = Vector( value )\ToColor!
addonName )

-- I hope it's faster that way... ://
isInFocus, isSinglePlayer = false, game.SinglePlayer!

-- Render
drawFlandre = nil
do

    :DrawRect, :DrawTexturedRect, :SetMaterial, :SetDrawColor = surface
    RealTime = RealTime
    :HasFocus = system

    x, y, size, shadow1, shadow2, mult = 0, 0, 0, 0, 0, 0
    material = Material( "flan/flanderka" )

    Add "Think", addonName, ->
        isInFocus = HasFocus!

        -- Don't calculate if not in focus
        unless isInFocus

            -- Position and size
            size = ceil( vmin * cl_flandre_size\GetInt! )
            x, y = ( width - size ) / 2, ( height - size ) / 2

            -- Shadow calculation
            mult = 0.25 + abs( sin( RealTime! ) ) * 0.25
            shadow1 = size * 0.1 * mult
            shadow2 = size * 0.2 * mult

    drawFlandre = ->
        SetDrawColor( backgroundColor.r, backgroundColor.g, backgroundColor.b )
        DrawRect( 0, 0, width, height )

        SetMaterial( material )

        SetDrawColor( 0, 0, 0, 60 )
        DrawTexturedRect( x - shadow1, y - shadow1, size, size )

        SetDrawColor( 0, 0, 0, 120 )
        DrawTexturedRect( x + shadow2, y + shadow2, size, size )

        SetDrawColor( 255, 255, 255 )
        DrawTexturedRect( x, y, size, size )

    unless isSinglePlayer
        Add "DrawOverlay", addonName, ->
            if isInFocus
                return

            drawFlandre!

:Start2D, :End2D = cam

Add "RenderScene", addonName, ->
    if isInFocus
        return

    if isSinglePlayer
        Start2D!
        drawFlandre!
        End2D!

    return true
